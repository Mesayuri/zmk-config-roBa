#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

&trackball {
    // automouse-layer = <4>;

    scroll-layers = <3>;

    // arrows {
    //     layers = <3>;
    //     bindings =
    //         <&kp RIGHT_ARROW>,
    //         <&kp LEFT_ARROW>,
    //         <&kp UP_ARROW>,
    //         <&kp DOWN_ARROW>;
    //     tick = <10>;
    //     wait-ms = <5>;
    //     tap-ms = <5>;
    // };
};

/ {
    combos { compatible = "zmk,combos"; };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        scroll_up_down: scroll_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            label = "SCROLL_UP_DOWN";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W           &kp E  &kp R  &kp T                                &kp Y            &kp U  &kp I     &kp O     &kp P
&kp A             &kp S           &kp D  &kp F  &kp G  &mkp MB3       &mo 4          &kp H            &kp J  &kp K     &kp L     &kp RCTRL
&mt LEFT_SHIFT Z  &kp X           &kp C  &kp V  &kp B  &mkp MB1       &kp RIGHT_ALT  &kp N            &kp M  &mkp MB1  &mkp MB2  &kp BACKSPACE
&kp LEFT_GUI      &kp LEFT_SHIFT  &mo 3  &mo 2  &mo 1  &kp SPACE      &kp ENTER      &kp RIGHT_SHIFT                             &kp RIGHT_ALT
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        FUNCTION {
            bindings = <
&kp INT_YEN  &kp INT_RO         &kp COMMA       &kp PERIOD     &trans                                &kp EQUAL         &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &trans
&kp TAB      &kp LANGUAGE_2     &kp LANGUAGE_1  &kp MINUS      &kp SLASH         &trans      &trans  &kp LEFT_BRACKET  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &trans
&kp ESCAPE   &kp RIGHT_BRACKET  &kp BACKSLASH   &kp SEMICOLON  &kp SINGLE_QUOTE  &trans      &trans  &kp NUMBER_0      &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp DELETE
&trans       &trans             &trans          &trans         &trans            &trans      &trans  &trans                                                      &trans
            >;
        };

        ARROW {
            bindings = <
&trans        &kp HOME        &kp UP_ARROW    &kp END          &trans                             &kp F9  &kp F10  &kp F11  &kp F12  &trans
&kp LEFT_ALT  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp PAGE_UP    &trans      &trans  &kp F5  &kp F6   &kp F7   &kp F8   &trans
&kp LEFT_WIN  &mkp MB1        &mkp MB3        &mkp MB2         &kp PAGE_DOWN  &trans      &trans  &kp F1  &kp F2   &kp F3   &kp F4   &trans
&trans        &trans          &trans          &trans           &trans         &trans      &trans  &trans                             &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        NUM {
            bindings = <
&kp MINUS                   &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp PLUS                                           &trans  &trans  &trans  &trans  &trans
&kp SLASH                   &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp ASTERISK  &kp LC(LA(KP_NUMBER_0))      &trans  &trans  &trans  &trans  &trans  &trans
&mt LEFT_SHIFT KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp PERIOD    &kp EQUAL                    &trans  &trans  &trans  &trans  &trans  &trans
&trans                      &trans           &trans           &trans           &trans        &trans                       &trans  &trans                          &trans
            >;
        };

        util {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
